name: build

on:
  pull_request:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.0
        with:
          node-version: 12.x

      - name: Restore cache
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          # cache based on both package.json and package-lock.json
          # because if either of these files are changed we want npm ci to run so it can verify they're in sync
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('package.json') }}-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: ESLint analysis
        run: npm run eslint

      - name: Stylelint analysis
        run: npm run stylelint

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.0.10
        with:
          name: codecov-build
          fail_ci_if_error: true

      - name: Upload build artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: actions/upload-artifact@master
        with:
          name: build
          path: ./build

  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore cache
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          # cache based on both package.json and package-lock.json
          # because if either of these files are changed we want npm ci to run so it can verify they're in sync
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('package.json') }}-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: ./build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./build

  automerge-dependencies:
    needs: build
    if: github.event_name == 'pull_request' && github.actor == 'dependabot[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Approve
        uses: hmarr/auto-approve-action@v2.0.0
        with:
          github-token: "${{ secrets.PAT }}"

      - name: Merge
        uses: "pascalgn/automerge-action@4536e8847eb62fe2f0ee52c8fa92d17aa97f932f"
        env:
          GITHUB_TOKEN: "${{ secrets.PAT }}"
          MERGE_LABELS: "dependencies"
          MERGE_METHOD: "squash"
          MERGE_COMMIT_MESSAGE: "{pullRequest.title} (#{pullRequest.number})"
          MERGE_FORKS: "false"
          UPDATE_LABELS: "disabled"
