name: build

on:
  pull_request:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 14.x

      - name: Check package.json is sorted
        run: npx sort-package-json --check

      - name: Restore npm dependencies cache
        id: npm-cache
        uses: actions/cache@v2.1.6
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('package.json') }}-${{ hashFiles('package-lock.json') }}

      - name: Install npm dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: ESLint analysis
        run: npm run eslint

      - name: Stylelint analysis
        run: npm run stylelint

      - name: Build
        run: npm run build

      - name: Test
        run: npm run test

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v1.2.1
        with:
          name: codecov-build
          fail_ci_if_error: true

      - name: Upload build artifact
        if: github.event_name == 'push' && github.ref == 'refs/heads/master' && matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@master
        with:
          name: build
          path: ./build

  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Restore npm dependencies cache
        id: npm-cache
        uses: actions/cache@v2.1.6
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('package.json') }}-${{ hashFiles('package-lock.json') }}

      - name: Install npm dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Download build artifact
        uses: actions/download-artifact@master
        with:
          name: build
          path: ./build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./build
